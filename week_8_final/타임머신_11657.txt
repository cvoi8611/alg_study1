문제 인식

    N개의 도시가 있다. 그리고 한 도시에서 출발하여 다른 도시에 도착하는 버스가 M개 있다.
    각 버스는 A, B, C로 나타낼 수 있는데, A는 시작도시, B는 도착도시, C는 버스를 타고 이동하는데 걸리는 시간이다.
    시간 C가 양수가 아닌 경우가 있다. C = 0인 경우는 순간 이동을 하는 경우, C < 0인 경우는 타임머신으로 시간을 되돌아가는 경우이다.

    1번 도시에서 출발해서 나머지 도시로 가는 가장 빠른 시간을 구하는 프로그램을 작성하시오.

    첫째 줄에 도시의 개수 N (1 ≤ N ≤ 500), 버스 노선의 개수 M (1 ≤ M ≤ 6,000)이 주어진다.
    둘째 줄부터 M개의 줄에는 버스 노선의 정보 A, B, C (1 ≤ A, B ≤ N, -10,000 ≤ C ≤ 10,000)가 주어진다. 

    만약 1번 도시에서 출발해 어떤 도시로 가는 과정에서 시간을 무한히 오래 전으로 되돌릴 수 있다면 첫째 줄에 -1을 출력한다.
    그렇지 않다면 N-1개 줄에 걸쳐 각 줄에 1번 도시에서 출발해 2번 도시, 3번 도시, ..., N번 도시로 가는 가장 빠른 시간을 순서대로 출력한다.
    만약 해당 도시로 가는 경로가 없다면 대신 -1을 출력한다.

문제 해결 방법

    방향 그래프가 가중치를 갖는 경우에서 가장 적은 가중치값을 가지는 경로를 찾는 문제다

    즉, 다익스트라 알고리즘으로 구현이 가능.....할 줄 알았지만 이 문제는 불가능하다

    다익스트라 알고리즘에서는 음수를 받아가면서 a -> b -> c -> a 라는 무한 루프에 걸려 최솟값을 찾지 못하는 경우가 생길 수 있다

    그러므로, 음수 간선의 순환을 감지할 수 있는 벨만-포드 알고리즘을 사용해야 한다

    


슈도 코드

벨만-포드 알고리즘 코드를 작성
