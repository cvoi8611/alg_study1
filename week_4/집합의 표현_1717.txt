문제 인식

    n+1개의 집합 , {0} , {1} ... {n} 존재
    
    여기에 연산 2개 수행
        - 합 집합 연산
        - 두 원소가 같은 집합에 포함되어 있는지를 확인하는 연산

    
    집합을 표현하는 프로그램 작성

    첫째 줄에 n, m 주어짐
    m은 입력으로 주어지는 연산의 수
    다음 m개의 줄에 각각의 연산이 주어짐
    합 집합
        - 0 a b -> {a} + {b}
    확인하는 연산
        - 1 a b -> a 와 b 가 같은 집합에 포함되었는가?

    출력
        "yes" 또는 "no"

문제 해결 방법

    처음에 {0},{1},{2}...{n}의 집합이 존재하고
    
    0 0 1
    0 1 2
    입력 받으면

    0 0 1 -> {0} + {1} = {0,1}
    0 1 2 -> {0,1} + {2} = {0,1,2}

    이런 방향으로 연산이 된다

    즉, 이 문제에서는 각각 0 ~ n 으로 노드들이 구성되어 있고
    이 각각의 노드들을 집합으로 묶어서 합치고 이 노드들의 상태를 확인하는 문제다

    두 노드가 같은 집합에 속하는지 판별하는 유니온 파인드를 사용하면 해결이 가능하다

    첫줄에 n과 m을 입력받고

    parent로 0부터 n까지 하나씩 지정

    m번 만큼 input을 반복해서 받는다

    만약 0이면
        a와 b를 비교하고 큰 값이 작은 값의 parent가 됨
        즉 a > b 인 경우 a = parent[b]

    만약 1이면
        a b를 비교하고 더 큰 값이 작은 값의 부모 노드를 하나씩 비교
        즉 a > b 인 경우
        parent가 없으면 종료{
            맞으면 그대로 true 출력
            아니면 parent[parent[b]] = a 인가?(이거 계속 반복되니 재귀함수 ㄱ)
            parent[b] = a 인가?
        }
        true 나옴? 안나오면 false 출력
        
    
        