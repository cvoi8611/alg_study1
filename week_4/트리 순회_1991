문제 인식

    트리를 입력받고, 전위, 중위, 후위 순회를 출력하는 문제다

    그냥 트리다
    ㅇㅇ 그냥 트리

    첫째 줄에 이진트리 노드 개수 N 입력 받음
    
    둘째 줄은 N개의 줄에 거쳐 각 노드와 그의 왼쪽, 오른쪽 노드 입력 받음
    노드의 이름은 A부터 차례대로 알파벳 대문자 입력받고, 항상 A가 루트 노드 , 자식 노드가 없는 경우는 '.'으로 표현

    첫째 줄에 전위 순회
    둘째 줄에 중위 순회
    셋째 줄에 후위 순회 출력받는다

문제 해결방법

    트리를 구현하고, 전위 중위 후위 순회를 돌면 된다.

    처음 N을 입력 받은 만큼 입력을 반복해서 받음
    부모 노드 , 왼쪽 자식 노드, 오른쪽 자식 노드 순으로 하나씩 입력 받아서
    부모 노드에 왼쪽 , 오른쪽 자식 노드를 생성

    A B C
    B D .
    C . . 입력 받으면
    tree[A] 에 왼쪽 노드 B , 오른쪽 노드 C
    tree[B] 에 왼쪽 노드 D , 오른쪽 노드 .
    tree[C] 에 왼쪽 노드 . , 오른쪽 노드 .
    
    전위 순회는
        node(항상 처음은 root), left, right 순으로 방문
    중위 순회는
        left, node , right 순으로 방문
    후위 순회는
        left, right, node 순으로 방문


    전위 순회
        node 를 출력 후,
        왼쪽 자식 노드가 .이 아니면 왼쪽 자식 노드로 이동 후, 재귀
        이후 오른쪽 노드가 .이 아니면 오른쪽 노드로 이동 후, 재귀

        출력 우선순위가 현재 노드 > 왼쪽 자식 노드 > 오른쪽 자식 노드 로 정렬됨

    중위 순회
        왼쪽 자식 노드가 .이 아니면 왼쪽 자식 노드로 이동 후, 재귀
        이후 node를 출력
        이후 오른쪽 노드가 .이 아니라면 오른쪽 노드로 이동 후, 재귀

        출력 우선순위 left > node > right

    후위 순회

        왼쪽 자식 노드가 .이 아니면 왼쪽 자식 노드로 이동 후, 재귀
        이후 오른쪽 노드가 .이 아니라면 오른쪽 노드로 이동 후, 재귀
        이후 node를 출력
        
        출력 우선순위 left > right > node